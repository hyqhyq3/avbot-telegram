// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

/*
Package stat is a generated protocol buffer package.

It is generated from these files:
	data.proto

It has these top-level messages:
	User
	Group
	Store
*/
package stat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Count     int32  `protobuf:"varint,1,opt,name=Count" json:"Count,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=FirstName" json:"FirstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=LastName" json:"LastName,omitempty"`
	UserName  string `protobuf:"bytes,4,opt,name=UserName" json:"UserName,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type Group struct {
	Users map[int64]*User `protobuf:"bytes,1,rep,name=Users" json:"Users,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Group) Reset()                    { *m = Group{} }
func (m *Group) String() string            { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()               {}
func (*Group) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Group) GetUsers() map[int64]*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type Store struct {
	Groups map[int64]*Group `protobuf:"bytes,1,rep,name=Groups" json:"Groups,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Store) Reset()                    { *m = Store{} }
func (m *Store) String() string            { return proto.CompactTextString(m) }
func (*Store) ProtoMessage()               {}
func (*Store) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Store) GetGroups() map[int64]*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "stat.User")
	proto.RegisterType((*Group)(nil), "stat.Group")
	proto.RegisterType((*Store)(nil), "stat.Store")
}

func init() { proto.RegisterFile("data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x3d, 0x4b, 0xc4, 0x40,
	0x10, 0x86, 0xd9, 0x4b, 0xf6, 0xf0, 0xde, 0x34, 0xb2, 0x88, 0x86, 0x60, 0x11, 0x53, 0xa5, 0x90,
	0x08, 0x67, 0x23, 0xb6, 0xea, 0xd9, 0x88, 0xc5, 0x8a, 0x3f, 0x60, 0xc5, 0x14, 0xa2, 0xde, 0x1e,
	0x9b, 0x89, 0x70, 0xd8, 0xf8, 0xd3, 0x65, 0x67, 0x72, 0x26, 0xc2, 0x75, 0x99, 0xf7, 0x99, 0x8f,
	0x27, 0x2c, 0xf0, 0xea, 0xc8, 0x35, 0x9b, 0xe0, 0xc9, 0x9b, 0xb4, 0x23, 0x47, 0x55, 0x40, 0xfa,
	0xdc, 0xb5, 0xc1, 0x1c, 0x41, 0xdf, 0xf8, 0x7e, 0x4d, 0xb9, 0x2a, 0x55, 0xad, 0xad, 0x14, 0xe6,
	0x14, 0x8b, 0xd5, 0x5b, 0xe8, 0xe8, 0xd1, 0x7d, 0xb6, 0xf9, 0xac, 0x54, 0xf5, 0xc2, 0x8e, 0x81,
	0x29, 0x70, 0xf0, 0xe0, 0x06, 0x98, 0x30, 0xfc, 0xab, 0x23, 0x8b, 0x7b, 0x99, 0xa5, 0xc2, 0x76,
	0x75, 0xf5, 0x0d, 0x7d, 0x1f, 0x7c, 0xbf, 0x31, 0xe7, 0xd0, 0x31, 0xec, 0x72, 0x55, 0x26, 0x75,
	0xb6, 0x3c, 0x6e, 0xa2, 0x52, 0xc3, 0xac, 0x61, 0x70, 0xb7, 0xa6, 0xb0, 0xb5, 0xd2, 0x54, 0xdc,
	0x02, 0x63, 0x68, 0x0e, 0x91, 0xbc, 0xb7, 0x5b, 0xd6, 0x4d, 0x6c, 0xfc, 0x34, 0x25, 0xf4, 0x97,
	0xfb, 0xe8, 0x45, 0x34, 0x5b, 0x42, 0xb6, 0xc5, 0x11, 0x2b, 0xe0, 0x7a, 0x76, 0xa5, 0xaa, 0x1f,
	0x05, 0xfd, 0x44, 0x3e, 0xb4, 0xe6, 0x02, 0x73, 0x3e, 0xb5, 0x3b, 0x7f, 0x22, 0x03, 0x0c, 0x45,
	0x62, 0xb8, 0x3f, 0xb4, 0x15, 0x2b, 0x64, 0x93, 0x78, 0x8f, 0xc1, 0xd9, 0x7f, 0x83, 0x6c, 0xf2,
	0x3f, 0x13, 0x85, 0x97, 0x39, 0x3f, 0xc0, 0xe5, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x54, 0xe8,
	0x4e, 0xee, 0x8e, 0x01, 0x00, 0x00,
}
