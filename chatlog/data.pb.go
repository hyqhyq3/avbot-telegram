// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

/*
Package chatlog is a generated protocol buffer package.

It is generated from these files:
	data.proto

It has these top-level messages:
	ChatLog
*/
package chatlog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_UNKNOWN MessageType = 0
	MessageType_TEXT    MessageType = 1
	MessageType_IMAGE   MessageType = 2
	MessageType_VIDEO   MessageType = 3
)

var MessageType_name = map[int32]string{
	0: "UNKNOWN",
	1: "TEXT",
	2: "IMAGE",
	3: "VIDEO",
}
var MessageType_value = map[string]int32{
	"UNKNOWN": 0,
	"TEXT":    1,
	"IMAGE":   2,
	"VIDEO":   3,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ChatLog struct {
	MessageId uint64      `protobuf:"varint,1,opt,name=MessageId" json:"MessageId,omitempty"`
	Type      MessageType `protobuf:"varint,2,opt,name=Type,enum=chatlog.MessageType" json:"Type,omitempty"`
	Content   string      `protobuf:"bytes,3,opt,name=Content" json:"Content,omitempty"`
	From      string      `protobuf:"bytes,4,opt,name=From" json:"From,omitempty"`
	FileID    string      `protobuf:"bytes,5,opt,name=FileID" json:"FileID,omitempty"`
	Timestamp int64       `protobuf:"varint,6,opt,name=Timestamp" json:"Timestamp,omitempty"`
}

func (m *ChatLog) Reset()                    { *m = ChatLog{} }
func (m *ChatLog) String() string            { return proto.CompactTextString(m) }
func (*ChatLog) ProtoMessage()               {}
func (*ChatLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ChatLog) GetMessageId() uint64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *ChatLog) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_UNKNOWN
}

func (m *ChatLog) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ChatLog) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ChatLog) GetFileID() string {
	if m != nil {
		return m.FileID
	}
	return ""
}

func (m *ChatLog) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*ChatLog)(nil), "chatlog.ChatLog")
	proto.RegisterEnum("chatlog.MessageType", MessageType_name, MessageType_value)
}

func init() { proto.RegisterFile("data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x49, 0x2c, 0x49,
	0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0xce, 0x48, 0x2c, 0xc9, 0xc9, 0x4f, 0x57,
	0xda, 0xca, 0xc8, 0xc5, 0xee, 0x9c, 0x91, 0x58, 0xe2, 0x93, 0x9f, 0x2e, 0x24, 0xc3, 0xc5, 0xe9,
	0x9b, 0x5a, 0x5c, 0x9c, 0x98, 0x9e, 0xea, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x12, 0x84,
	0x10, 0x10, 0xd2, 0xe0, 0x62, 0x09, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x33,
	0x12, 0xd1, 0x83, 0x9a, 0xa0, 0x07, 0x55, 0x01, 0x92, 0x0b, 0x02, 0xab, 0x10, 0x92, 0xe0, 0x62,
	0x77, 0xce, 0xcf, 0x2b, 0x49, 0xcd, 0x2b, 0x91, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x71,
	0x85, 0x84, 0xb8, 0x58, 0xdc, 0x8a, 0xf2, 0x73, 0x25, 0x58, 0xc0, 0xc2, 0x60, 0xb6, 0x90, 0x18,
	0x17, 0x9b, 0x5b, 0x66, 0x4e, 0xaa, 0xa7, 0x8b, 0x04, 0x2b, 0x58, 0x14, 0xca, 0x03, 0xb9, 0x26,
	0x24, 0x33, 0x37, 0xb5, 0xb8, 0x24, 0x31, 0xb7, 0x40, 0x82, 0x4d, 0x81, 0x51, 0x83, 0x39, 0x08,
	0x21, 0xa0, 0x65, 0xc5, 0xc5, 0x8d, 0x64, 0xb1, 0x10, 0x37, 0x17, 0x7b, 0xa8, 0x9f, 0xb7, 0x9f,
	0x7f, 0xb8, 0x9f, 0x00, 0x83, 0x10, 0x07, 0x17, 0x4b, 0x88, 0x6b, 0x44, 0x88, 0x00, 0xa3, 0x10,
	0x27, 0x17, 0xab, 0xa7, 0xaf, 0xa3, 0xbb, 0xab, 0x00, 0x13, 0x88, 0x19, 0xe6, 0xe9, 0xe2, 0xea,
	0x2f, 0xc0, 0x9c, 0xc4, 0x06, 0x0e, 0x03, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x34, 0xd4,
	0xea, 0x07, 0x11, 0x01, 0x00, 0x00,
}
